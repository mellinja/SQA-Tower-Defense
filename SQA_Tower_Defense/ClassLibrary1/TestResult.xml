<?xml version="1.0" encoding="utf-8" standalone="no"?>
<!--This file represents the results of running a test suite-->
<test-results name="C:\Users\Andeh\Documents\Courses\CSSE376\Git\Final Project\SQA-Tower-Defense\SQA_Tower_Defense\ClassLibrary1\ClassTests.csproj" total="39" errors="0" failures="0" not-run="0" inconclusive="0" ignored="0" skipped="0" invalid="0" date="2011-04-10" time="14:31:31">
  <environment nunit-version="2.5.9.10348" clr-version="2.0.50727.4952" os-version="Microsoft Windows NT 6.1.7600.0" platform="Win32NT" cwd="C:\Users\Andeh\Documents\Courses\CSSE376\Git\Final Project\SQA-Tower-Defense\SQA_Tower_Defense\ClassLibrary1" machine-name="LOLWUT" user="Andeh" user-domain="LOLWUT" />
  <culture-info current-culture="en-US" current-uiculture="en-US" />
  <test-suite type="Project" name="C:\Users\Andeh\Documents\Courses\CSSE376\Git\Final Project\SQA-Tower-Defense\SQA_Tower_Defense\ClassLibrary1\ClassTests.csproj" executed="True" result="Success" success="True" time="0.094" asserts="0">
    <results>
      <test-suite type="Assembly" name="C:\Users\Andeh\Documents\Courses\CSSE376\Git\Final Project\SQA-Tower-Defense\SQA_Tower_Defense\ClassLibrary1\bin\Debug\ClassLibrary1.dll" executed="True" result="Success" success="True" time="0.082" asserts="0">
        <results>
          <test-suite type="Namespace" name="ClassTests" executed="True" result="Success" success="True" time="0.081" asserts="0">
            <results>
              <test-suite type="TestFixture" name="EnemyTests" executed="True" result="Success" success="True" time="0.012" asserts="0">
                <results>
                  <test-case name="ClassTests.EnemyTests.EnemyHasCorrectGoldAfterInitialized" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                  <test-case name="ClassTests.EnemyTests.EnemyHasCorrectHealthAfterDamaged" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                  <test-case name="ClassTests.EnemyTests.EnemyHasCorrectHealthAfterInitialized" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                  <test-case name="ClassTests.EnemyTests.EnemyHasCorrectSpeedAfterInitialized" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                  <test-case name="ClassTests.EnemyTests.EnemyHasCorrectSpeedAfterModified" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                  <test-case name="ClassTests.EnemyTests.EnemyHasCorrectTypeAfterModified" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                  <test-case name="ClassTests.EnemyTests.EnemyInitializesSuccessfully" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="MapTests" executed="True" result="Success" success="True" time="0.050" asserts="0">
                <results>
                  <test-case name="ClassTests.MapTests.EnemiesGetAddedToListWhenSpawned" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                  <test-case name="ClassTests.MapTests.EnemiesGetRemovedFromListWhenKilled" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                  <test-case name="ClassTests.MapTests.EnemiesNotInListThatGetKilledCrashGame" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                  <test-case name="ClassTests.MapTests.InsufficientFundsRejectTowerPlacement" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                  <test-case name="ClassTests.MapTests.LoadedStateHasCorrectLastEnemy" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                  <test-case name="ClassTests.MapTests.LoadedStateHasCorrectMoneyAmount" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                  <test-case name="ClassTests.MapTests.LoadedStateHasCorrectTowerCount" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                  <test-case name="ClassTests.MapTests.LoadedStatesDoChangeStateOfMap" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                  <test-case name="ClassTests.MapTests.LoadedStatesDoNotLoadIfThereIsNoPreviousStates" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                  <test-case name="ClassTests.MapTests.MapInitializes" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                  <test-case name="ClassTests.MapTests.MoneyDecreasesWhenTowerIsPlaced" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                  <test-case name="ClassTests.MapTests.MoneyIncreasesWhenEnemyIsKilled" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                  <test-case name="ClassTests.MapTests.MoneyIncreasesWhenTowerIsSold" executed="True" result="Success" success="True" time="0.003" asserts="1" />
                  <test-case name="ClassTests.MapTests.SavedStateLastStateHasCorrectEnemy" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                  <test-case name="ClassTests.MapTests.SavedStateLastStateHasCorrectEnemyCount" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                  <test-case name="ClassTests.MapTests.SaveStateListIsNotNullWhenMapInitializes" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                  <test-case name="ClassTests.MapTests.SaveStateNextStateAddsNewStateToList" executed="True" result="Success" success="True" time="0.001" asserts="1" />
                  <test-case name="ClassTests.MapTests.SaveStateOneSavedStateHasCorrectTowerList" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                  <test-case name="ClassTests.MapTests.SaveStateOneSaveStateHasCorrectMoneyCount" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                  <test-case name="ClassTests.MapTests.SaveStateOneSaveStateHasCorrectScoreAmount" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                  <test-case name="ClassTests.MapTests.SaveStateTwoSavedStatesDoNotHaveIncorrectTowerList" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                  <test-case name="ClassTests.MapTests.SaveStateTwoSavedStatesHaveCorrectTowerList" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                  <test-case name="ClassTests.MapTests.TowersCannotBePlacedOnTopOfAnotherTower" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                  <test-case name="ClassTests.MapTests.TowersGetAddedToListWhenPlaced" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                  <test-case name="ClassTests.MapTests.TowersGetRemovedFromListWhenSold" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="TowerTests" executed="True" result="Success" success="True" time="0.012" asserts="0">
                <results>
                  <test-case name="ClassTests.TowerTests.testInit" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                  <test-case name="ClassTests.TowerTests.TowerAddsEnemySuccessfully" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                  <test-case name="ClassTests.TowerTests.towerHasCorrectAttackDamageWhenInitialized" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                  <test-case name="ClassTests.TowerTests.towerHasCorrectCostWhenInitialized" executed="True" result="Success" success="True" time="0.001" asserts="1" />
                  <test-case name="ClassTests.TowerTests.towerHasCorrectHealthAfterModified" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                  <test-case name="ClassTests.TowerTests.towerHasCorrectHealthWhenInitialized" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                  <test-case name="ClassTests.TowerTests.towerHasCorrectRangeWhenInitialized" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
    </results>
  </test-suite>
</test-results>